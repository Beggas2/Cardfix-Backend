#!/bin/bash

# Script de teste para o backend do aplicativo de concursos
# Este script testa os endpoints principais sem depender do banco de dados

echo "üß™ Iniciando testes do backend..."
echo ""

BASE_URL="http://localhost:3001"

# Teste 1: Health Check
echo "1. Testando Health Check..."
response=$(curl -s "$BASE_URL/health")
if [[ $response == *"OK"* ]]; then
    echo "‚úÖ Health check passou"
else
    echo "‚ùå Health check falhou"
    echo "Resposta: $response"
fi
echo ""

# Teste 2: Endpoint principal
echo "2. Testando endpoint principal..."
response=$(curl -s "$BASE_URL/")
if [[ $response == *"Backend do Aplicativo de Concursos"* ]]; then
    echo "‚úÖ Endpoint principal passou"
else
    echo "‚ùå Endpoint principal falhou"
    echo "Resposta: $response"
fi
echo ""

# Teste 3: Endpoint de t√≥picos (p√∫blico)
echo "3. Testando endpoint de t√≥picos..."
response=$(curl -s "$BASE_URL/api/topics")
if [[ $response == *"success"* ]] || [[ $response == *"error"* ]]; then
    echo "‚úÖ Endpoint de t√≥picos respondeu (estrutura correta)"
else
    echo "‚ùå Endpoint de t√≥picos falhou"
    echo "Resposta: $response"
fi
echo ""

# Teste 4: Endpoint protegido sem token
echo "4. Testando endpoint protegido sem token..."
response=$(curl -s "$BASE_URL/api/contests")
if [[ $response == *"Token de acesso requerido"* ]]; then
    echo "‚úÖ Prote√ß√£o de rota funcionando"
else
    echo "‚ùå Prote√ß√£o de rota falhou"
    echo "Resposta: $response"
fi
echo ""

# Teste 5: Estrutura de resposta de erro
echo "5. Testando estrutura de resposta de erro..."
response=$(curl -s "$BASE_URL/api/nonexistent")
if [[ $response == *"Rota n√£o encontrada"* ]]; then
    echo "‚úÖ Tratamento de erro 404 funcionando"
else
    echo "‚ùå Tratamento de erro 404 falhou"
    echo "Resposta: $response"
fi
echo ""

echo "üèÅ Testes conclu√≠dos!"
echo ""
echo "üìù Resumo:"
echo "- Servidor est√° rodando na porta 3001"
echo "- Endpoints b√°sicos est√£o funcionando"
echo "- Sistema de autentica√ß√£o est√° protegendo rotas"
echo "- Tratamento de erros est√° funcionando"
echo ""
echo "‚ö†Ô∏è  Nota: Para testes completos, configure o banco PostgreSQL e execute:"
echo "   npm run prisma:migrate"
echo "   npm run prisma:generate"

